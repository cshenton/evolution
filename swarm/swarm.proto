syntax = "proto3";

import "google/protobuf/empty.proto";

package swarm;

// The swarm service is used to communicate fitnesses between servers.
service Swarm {
  // Join returns the server's current MLP, used to bootstrap new servers.
  rpc Join (google.protobuf.Empty) returns (MLP) {}
  // Notify tells the server about a new result.
  rpc Notify (Result) returns (google.protobuf.Empty) {}
}

// Activation is a valid activation function
enum Activation {
  IDENTITY = 0; // The identity function
  TANH = 1;     // Hypergeometric tan
  RELU = 2;     // Recitified linear unit
}

// MLP contains the weights and specification for a multi-layer perceptron.
message MLP {
  repeated int32 sizes = 1;
  repeated Activation activations = 2;
  repeated double weights = 3;
}

// Result contains the fitness of a perturbation, and the seed used to generate it.
message Result {
  int64 seed = 1;
  double fitness = 2;
}
